// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

/*
Package storage is a generated protocol buffer package.

It is generated from these files:
	storage.proto

It has these top-level messages:
	EmptyResponse
	CreateRequest
	SetDescriptionRequest
	TreeRequest
	TreeRespone
	TreeObjectResponse
	CommitResponse
*/
package storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateRequest struct {
	Owner string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SetDescriptionRequest struct {
	Owner       string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *SetDescriptionRequest) Reset()                    { *m = SetDescriptionRequest{} }
func (m *SetDescriptionRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDescriptionRequest) ProtoMessage()               {}
func (*SetDescriptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SetDescriptionRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *SetDescriptionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetDescriptionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type TreeRequest struct {
	Owner     string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Branch    string `protobuf:"bytes,3,opt,name=branch" json:"branch,omitempty"`
	Recursive bool   `protobuf:"varint,4,opt,name=recursive" json:"recursive,omitempty"`
}

func (m *TreeRequest) Reset()                    { *m = TreeRequest{} }
func (m *TreeRequest) String() string            { return proto.CompactTextString(m) }
func (*TreeRequest) ProtoMessage()               {}
func (*TreeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TreeRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *TreeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TreeRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *TreeRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

type TreeRespone struct {
	Objects []*TreeObjectResponse `protobuf:"bytes,1,rep,name=objects" json:"objects,omitempty"`
}

func (m *TreeRespone) Reset()                    { *m = TreeRespone{} }
func (m *TreeRespone) String() string            { return proto.CompactTextString(m) }
func (*TreeRespone) ProtoMessage()               {}
func (*TreeRespone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TreeRespone) GetObjects() []*TreeObjectResponse {
	if m != nil {
		return m.Objects
	}
	return nil
}

type TreeObjectResponse struct {
	Mode   string          `protobuf:"bytes,1,opt,name=Mode" json:"Mode,omitempty"`
	Type   string          `protobuf:"bytes,2,opt,name=Type" json:"Type,omitempty"`
	Object string          `protobuf:"bytes,3,opt,name=Object" json:"Object,omitempty"`
	File   string          `protobuf:"bytes,4,opt,name=File" json:"File,omitempty"`
	Commit *CommitResponse `protobuf:"bytes,5,opt,name=Commit" json:"Commit,omitempty"`
}

func (m *TreeObjectResponse) Reset()                    { *m = TreeObjectResponse{} }
func (m *TreeObjectResponse) String() string            { return proto.CompactTextString(m) }
func (*TreeObjectResponse) ProtoMessage()               {}
func (*TreeObjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TreeObjectResponse) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *TreeObjectResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TreeObjectResponse) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *TreeObjectResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *TreeObjectResponse) GetCommit() *CommitResponse {
	if m != nil {
		return m.Commit
	}
	return nil
}

type CommitResponse struct {
	Hash           string `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
	Tree           string `protobuf:"bytes,2,opt,name=Tree" json:"Tree,omitempty"`
	Parent         string `protobuf:"bytes,3,opt,name=Parent" json:"Parent,omitempty"`
	Subject        string `protobuf:"bytes,4,opt,name=Subject" json:"Subject,omitempty"`
	Author         string `protobuf:"bytes,5,opt,name=Author" json:"Author,omitempty"`
	AuthorEmail    string `protobuf:"bytes,6,opt,name=AuthorEmail" json:"AuthorEmail,omitempty"`
	AuthorDate     int64  `protobuf:"varint,7,opt,name=AuthorDate" json:"AuthorDate,omitempty"`
	Committer      string `protobuf:"bytes,8,opt,name=Committer" json:"Committer,omitempty"`
	CommitterEmail string `protobuf:"bytes,9,opt,name=CommitterEmail" json:"CommitterEmail,omitempty"`
	CommitterDate  int64  `protobuf:"varint,10,opt,name=CommitterDate" json:"CommitterDate,omitempty"`
}

func (m *CommitResponse) Reset()                    { *m = CommitResponse{} }
func (m *CommitResponse) String() string            { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()               {}
func (*CommitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CommitResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *CommitResponse) GetTree() string {
	if m != nil {
		return m.Tree
	}
	return ""
}

func (m *CommitResponse) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CommitResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CommitResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *CommitResponse) GetAuthorEmail() string {
	if m != nil {
		return m.AuthorEmail
	}
	return ""
}

func (m *CommitResponse) GetAuthorDate() int64 {
	if m != nil {
		return m.AuthorDate
	}
	return 0
}

func (m *CommitResponse) GetCommitter() string {
	if m != nil {
		return m.Committer
	}
	return ""
}

func (m *CommitResponse) GetCommitterEmail() string {
	if m != nil {
		return m.CommitterEmail
	}
	return ""
}

func (m *CommitResponse) GetCommitterDate() int64 {
	if m != nil {
		return m.CommitterDate
	}
	return 0
}

func init() {
	proto.RegisterType((*EmptyResponse)(nil), "storage.EmptyResponse")
	proto.RegisterType((*CreateRequest)(nil), "storage.CreateRequest")
	proto.RegisterType((*SetDescriptionRequest)(nil), "storage.SetDescriptionRequest")
	proto.RegisterType((*TreeRequest)(nil), "storage.TreeRequest")
	proto.RegisterType((*TreeRespone)(nil), "storage.TreeRespone")
	proto.RegisterType((*TreeObjectResponse)(nil), "storage.TreeObjectResponse")
	proto.RegisterType((*CommitResponse)(nil), "storage.CommitResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Storage service

type StorageClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	SetDescriptions(ctx context.Context, in *SetDescriptionRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Tree(ctx context.Context, in *TreeRequest, opts ...grpc.CallOption) (*TreeRespone, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) SetDescriptions(ctx context.Context, in *SetDescriptionRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/SetDescriptions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Tree(ctx context.Context, in *TreeRequest, opts ...grpc.CallOption) (*TreeRespone, error) {
	out := new(TreeRespone)
	err := grpc.Invoke(ctx, "/storage.Storage/Tree", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storage service

type StorageServer interface {
	Create(context.Context, *CreateRequest) (*EmptyResponse, error)
	SetDescriptions(context.Context, *SetDescriptionRequest) (*EmptyResponse, error)
	Tree(context.Context, *TreeRequest) (*TreeRespone, error)
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_SetDescriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDescriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).SetDescriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/SetDescriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).SetDescriptions(ctx, req.(*SetDescriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Tree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TreeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Tree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Tree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Tree(ctx, req.(*TreeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Storage_Create_Handler,
		},
		{
			MethodName: "SetDescriptions",
			Handler:    _Storage_SetDescriptions_Handler,
		},
		{
			MethodName: "Tree",
			Handler:    _Storage_Tree_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x5f, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0x95, 0x6e, 0x9b, 0x34, 0xb3, 0x5a, 0x2a, 0x8d, 0x4a, 0xb1, 0x00, 0x55, 0x51, 0x84,
	0x50, 0x9e, 0x8a, 0xb4, 0x08, 0x09, 0x1e, 0x51, 0xb7, 0x08, 0x1e, 0x10, 0xc8, 0xdb, 0x0b, 0x78,
	0xd3, 0x11, 0x1b, 0xd4, 0xc4, 0xc1, 0xf6, 0x82, 0x7a, 0x14, 0x6e, 0xc1, 0x19, 0x38, 0x19, 0xb2,
	0x1d, 0xe7, 0x4f, 0x81, 0x87, 0x7d, 0x9b, 0xef, 0xf3, 0x8c, 0xfd, 0xcb, 0xd8, 0x13, 0x58, 0x68,
	0x23, 0x95, 0xf8, 0x42, 0x17, 0xad, 0x92, 0x46, 0x62, 0xd2, 0xc9, 0xfc, 0x04, 0x16, 0x57, 0x75,
	0x6b, 0xee, 0x38, 0xe9, 0x56, 0x36, 0x9a, 0xf2, 0x37, 0xb0, 0xb8, 0x54, 0x24, 0x0c, 0x71, 0xfa,
	0xb6, 0x23, 0x6d, 0xf0, 0x14, 0x8e, 0xe4, 0x8f, 0x86, 0x14, 0x8b, 0xb2, 0xa8, 0x48, 0xb9, 0x17,
	0x88, 0x70, 0xd8, 0x88, 0x9a, 0xd8, 0x81, 0x33, 0x5d, 0x9c, 0x97, 0xf0, 0x70, 0x4d, 0x66, 0x45,
	0xba, 0x54, 0x55, 0x6b, 0x2a, 0xd9, 0xec, 0xbd, 0x05, 0x66, 0x30, 0xbf, 0x19, 0xea, 0xd9, 0xcc,
	0x2d, 0x8d, 0xad, 0xbc, 0x86, 0xf9, 0xb5, 0xa2, 0xfd, 0xe9, 0xf0, 0x0c, 0xe2, 0x8d, 0x12, 0x4d,
	0xb9, 0xed, 0x76, 0xed, 0x14, 0x3e, 0x85, 0x54, 0x51, 0xb9, 0x53, 0xba, 0xfa, 0x4e, 0xec, 0x30,
	0x8b, 0x8a, 0x63, 0x3e, 0x18, 0xf9, 0x2a, 0x1c, 0x67, 0xdb, 0x43, 0xf8, 0x0a, 0x12, 0xb9, 0xf9,
	0x4a, 0xa5, 0xd1, 0x2c, 0xca, 0x66, 0xc5, 0x7c, 0xf9, 0xe4, 0x22, 0x34, 0xd6, 0xa6, 0x7d, 0x72,
	0x6b, 0xa1, 0x97, 0x3c, 0xe4, 0xe6, 0x3f, 0x23, 0xc0, 0xbf, 0xd7, 0x2d, 0xe6, 0x47, 0x79, 0x43,
	0x1d, 0xbb, 0x8b, 0xad, 0x77, 0x7d, 0xd7, 0xf6, 0xe8, 0x36, 0xb6, 0xe8, 0xbe, 0x32, 0xa0, 0x7b,
	0x65, 0x73, 0xdf, 0x55, 0xb7, 0x9e, 0x3a, 0xe5, 0x2e, 0xc6, 0x17, 0x10, 0x5f, 0xca, 0xba, 0xae,
	0x0c, 0x3b, 0xca, 0xa2, 0x62, 0xbe, 0x7c, 0xd4, 0x03, 0x7a, 0xbb, 0x87, 0xeb, 0xd2, 0xf2, 0x5f,
	0x07, 0xf0, 0x60, 0xba, 0x64, 0xf7, 0x7d, 0x2f, 0xf4, 0x36, 0x70, 0xd9, 0xd8, 0x71, 0x29, 0x1a,
	0xb8, 0x14, 0x39, 0xae, 0xcf, 0x42, 0x51, 0xd3, 0x73, 0x79, 0x85, 0x0c, 0x92, 0xf5, 0xce, 0x03,
	0x7b, 0xb4, 0x20, 0x6d, 0xc5, 0xdb, 0x9d, 0xd9, 0x4a, 0xe5, 0xe8, 0x52, 0xde, 0x29, 0x7b, 0xef,
	0x3e, 0xba, 0xaa, 0x45, 0x75, 0xcb, 0x62, 0x7f, 0xef, 0x23, 0x0b, 0xcf, 0x01, 0xbc, 0x5c, 0x09,
	0x43, 0x2c, 0xc9, 0xa2, 0x62, 0xc6, 0x47, 0x8e, 0xbd, 0x46, 0xff, 0x15, 0x86, 0x14, 0x3b, 0x76,
	0xf5, 0x83, 0x81, 0xcf, 0xc3, 0x37, 0x1a, 0xea, 0x8e, 0x48, 0x5d, 0xca, 0x3d, 0x17, 0x9f, 0xc1,
	0xa2, 0x77, 0xdc, 0x41, 0xe0, 0x0e, 0x9a, 0x9a, 0xcb, 0xdf, 0x11, 0x24, 0x6b, 0xdf, 0x55, 0x7c,
	0x0d, 0xb1, 0x9f, 0x17, 0x3c, 0x1b, 0x3a, 0x3d, 0x1e, 0xa0, 0xc7, 0x83, 0x3f, 0x99, 0x34, 0xfc,
	0x00, 0x27, 0xd3, 0x71, 0xd1, 0x78, 0xde, 0xa7, 0xfe, 0x73, 0x90, 0xfe, 0xbb, 0xd5, 0xd2, 0x5f,
	0x0e, 0x9e, 0x4e, 0x5e, 0x63, 0xa8, 0xba, 0xef, 0xba, 0xa7, 0xbc, 0x89, 0xdd, 0x9f, 0xe0, 0xe5,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x5a, 0x3a, 0x32, 0x1a, 0x04, 0x00, 0x00,
}
