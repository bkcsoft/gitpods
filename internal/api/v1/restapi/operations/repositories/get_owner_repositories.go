// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetOwnerRepositoriesHandlerFunc turns a function with the right signature into a get owner repositories handler
type GetOwnerRepositoriesHandlerFunc func(GetOwnerRepositoriesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetOwnerRepositoriesHandlerFunc) Handle(params GetOwnerRepositoriesParams) middleware.Responder {
	return fn(params)
}

// GetOwnerRepositoriesHandler interface for that can handle valid get owner repositories params
type GetOwnerRepositoriesHandler interface {
	Handle(GetOwnerRepositoriesParams) middleware.Responder
}

// NewGetOwnerRepositories creates a new http.Handler for the get owner repositories operation
func NewGetOwnerRepositories(ctx *middleware.Context, handler GetOwnerRepositoriesHandler) *GetOwnerRepositories {
	return &GetOwnerRepositories{Context: ctx, Handler: handler}
}

/*GetOwnerRepositories swagger:route GET /repositories/{owner} repositories getOwnerRepositories

Get a owner's repositories

*/
type GetOwnerRepositories struct {
	Context *middleware.Context
	Handler GetOwnerRepositoriesHandler
}

func (o *GetOwnerRepositories) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetOwnerRepositoriesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
