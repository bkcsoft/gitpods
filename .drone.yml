---
kind: pipeline
name: testing

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: test
  image: golang:1.10
  pull: always
  commands:
  - 'go test -coverprofile coverage.out -race -v ./...'

# - name: codacy
#   image: plugins/codacy:1
#   pull: always
#   settings:
#     token:
#       from_secret: codacy

---
kind: pipeline
name: gitpods

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: binary
  image: golang:1.10
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/gitpods/gitpods ./cmd/gitpods

depends_on:
- testing

---
kind: pipeline
name: api

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: binary
  image: golang:1.10
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/api/api ./cmd/api

- name: docker
  image: plugins/docker:17.12
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    dockerfile: ./cmd/api/Dockerfile
    repo: gitpods/api
    tag:
    - latest
  when:
    branch:
    - master
    event:
    - push

depends_on:
- testing

---
kind: pipeline
name: storage

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: binary
  image: golang:1.10
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/storage/storage ./cmd/storage

- name: docker
  image: plugins/docker:17.12
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    dockerfile: cmd/storage/Dockerfile
    repo: gitpods/storage
    tag:
    - latest
  when:
    branch:
    - master
    event:
    - push

depends_on:
- testing

---
kind: pipeline
name: ui

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: download
  image: google/dart:1.24
  pull: always
  commands:
  - cd ui/
  - pub get --no-precompile
  volumes:
  - name: pub
    path: /root/.pub-cache

- name: analyzer
  image: google/dart:1.24
  pull: always
  commands:
  - cd ui/
  - dartanalyzer ./lib/
  volumes:
  - name: pub
    path: /root/.pub-cache

- name: dart
  image: google/dart:1.24
  pull: always
  commands:
  - cd ui/
  - pub build
  volumes:
  - name: pub
    path: /root/.pub-cache

- name: cleanup
  image: google/dart:1.24
  pull: always
  commands:
  - cd ui/
  - rm -rf build/web/packages
  volumes:
  - name: pub
    path: /root/.pub-cache

- name: bindata
  image: golang:1.10
  pull: always
  commands:
  - curl -s -L https://github.com/gobuffalo/packr/releases/download/v1.10.4/packr_1.10.4_linux_amd64.tar.gz | tar -xz
  - ./packr

- name: binary
  image: golang:1.10
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/ui/ui ./cmd/ui

- name: docker
  image: plugins/docker:17.12
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    dockerfile: cmd/ui/Dockerfile
    repo: gitpods/ui
    tag:
    - latest
  when:
    branch:
    - master
    event:
    - push

volumes:
- name: pub
  temp: {}

depends_on:
- testing

---
kind: pipeline
name: deploy

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: api
  image: kubeciio/kubectl:0.2
  pull: always
  environment:
    kubeconfig:
      from_secret: kubeconfig
  settings:
    kubectl: apply
    namespace: gitpods-try
    templates:
    - deployment/kubernetes/api/deployment.yml

- name: storage
  image: kubeciio/kubectl:0.2
  pull: always
  environment:
    kubeconfig:
      from_secret: kubeconfig
  settings:
    kubectl: apply
    namespace: gitpods-try
    templates:
    - deployment/kubernetes/storage/deployment.yml

- name: ui
  image: kubeciio/kubectl:0.2
  pull: always
  environment:
    kubeconfig:
      from_secret: kubeconfig
  settings:
    kubectl: apply
    namespace: gitpods-try
    templates:
    - deployment/kubernetes/ui/deployment.yml

trigger:
  branch:
  - master
  event:
  - push
  status:
  - success

depends_on:
- gitpods
- api
- storage
- ui
