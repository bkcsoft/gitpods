kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/gitpods/gitpods

steps:
- name: test
  pull: default
  image: golang:1.10
  commands:
  - go test -coverprofile coverage.out -race -v ./...

# Not sure if the plugin is outdated - TODO @tboerger

#- name: codacy
#  pull: always
#  image: plugins/codacy:1
#  environment:
#    CODACY_TOKEN:
#      from_secret: codacy

- name: dart
  image: google/dart:2.1
  commands:
  - cd ui
  - dartanalyzer --version
  - pub get --no-precompile
  - pub global activate webdev
  - ~/.pub-cache/bin/webdev build
  - rm -rf build/packages

- name: api
  pull: default
  image: golang:1.10
  commands:
  - "CGO_ENABLED=0 go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/api/api ./cmd/api"
  settings:
    group: build

- name: gitpods
  pull: default
  image: golang:1.10
  commands:
  - "CGO_ENABLED=0 go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/gitpods/gitpods ./cmd/gitpods"
  settings:
    group: build

- name: storage
  pull: default
  image: golang:1.10
  commands:
  - "CGO_ENABLED=0 go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/storage/storage ./cmd/storage"
  settings:
    group: build

- name: ui
  pull: default
  image: golang:1.10
  commands:
  - "curl -s -L https://github.com/gobuffalo/packr/releases/download/v1.21.1/packr_1.21.1_linux_amd64.tar.gz | tar -xz"
  - ./packr
  - "CGO_ENABLED=0 go build -v -ldflags '-w -extldflags '-static'' -o ./cmd/ui/ui ./cmd/ui"
  settings:
    group: build

- name: docker-api
  pull: default
  image: plugins/docker
  settings:
    dockerfile: ./cmd/api/Dockerfile
    group: docker
    repo: gitpods/api
    tag:
    - latest
  environment:
    docker_password:
      from_secret: docker_password
    docker_username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: docker-storage
  pull: default
  image: plugins/docker
  settings:
    context: ./cmd/storage
    dockerfile: cmd/storage/Dockerfile
    group: docker
    repo: gitpods/storage
    tag:
    - latest
  environment:
    docker_password:
      from_secret: docker_password
    docker_username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

# Needs to be enabled with dart 2 again

#- name: docker-ui
#  pull: default
#  image: plugins/docker
#  settings:
#    context: ./cmd/ui
#    dockerfile: cmd/ui/Dockerfile
#    group: docker
#    repo: gitpods/ui
#    tag:
#    - latest
#  environment:
#    docker_password:
#      from_secret: docker_password
#    docker_username:
#      from_secret: docker_username
#  when:
#    branch:
#    - master
#    event:
#    - push

# Don't deploy to Kubernetes at the moment

#- name: kubernetes-api
#  pull: default
#  image: kubeciio/kubectl:0.2
#  settings:
#    kubectl: apply
#    namespace: gitpods-try
#    templates:
#    - deployment/kubernetes/api/deployment.yml
#  environment:
#    kubeconfig:
#      from_secret: kubeconfig
#  when:
#    branch:
#    - master
#    event:
#    - push
#
#- name: kubernetes-storage
#  pull: default
#  image: kubeciio/kubectl:0.2
#  settings:
#    kubectl: apply
#    namespace: gitpods-try
#    templates:
#    - deployment/kubernetes/storage/deployment.yml
#  environment:
#    kubeconfig:
#      from_secret: kubeconfig
#  when:
#    branch:
#    - master
#    event:
#    - push
#
#- name: kubernetes-ui
#  pull: default
#  image: kubeciio/kubectl:0.2
#  settings:
#    kubectl: apply
#    namespace: gitpods-try
#    templates:
#    - deployment/kubernetes/ui/deployment.yml
#  environment:
#    kubeconfig:
#      from_secret: kubeconfig
#  when:
#    branch:
#    - master
#    event:
#    - push
